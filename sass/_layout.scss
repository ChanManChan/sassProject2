.container {
  /*1200px basically if we have enough space, but if there's not enough space, so if the viewport is less than 1200px, then we simply occupy 100% of the available viewport width and that's what max-width does*/
  max-width: 120rem;
  margin: 8rem auto;
  background-color: var(--color-grey-light-1);
  box-shadow: var(--shadow-dark);

  /*min-height, This prevents the value of the height property from becoming smaller than min-height.*/
  min-height: 50rem;
}
.header {
  font-size: 1.4rem;
  height: 7rem;
  background-color: #fff;
  border-bottom: var(--line);
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.content {
  display: flex;
}
.sidebar {
  background-color: var(--color-grey-dark-1);
  flex: 0 0 18%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.hotel-view {
  background-color: #fff;

  // TEST
  // background-color: orangered;
  // height: 80rem;  <--i want the content to define the height of the box as usual therefore remove it

  /*with flex:1; we are saying that the element should grow as much as it can (so over all the available space that it has) and so now it grew all the way until the right side and its occupying the remaining 82%*/
  flex: 1;
}

.detail {
  font-size: 1.4rem;
  display: flex;
  padding: 4.5rem;
  background-color: var(--color-grey-light-1);
  border-bottom: var(--line);
}
.description {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  flex: 0 0 60%;
  margin-right: 4.5rem;
}
.user-reviews {
  // background-color: yellowgreen;
  flex: 1;
  // display: flex;
  // flex-direction: column;
  // align-items: center;
}
